#
# Copyright (C) 2021 Crowds Technologies LLC. All rights reserved.
#
# Distributed under MIT License
# See: https://github.com/CrowdsTech/cocos2d-x-CI/blob/main/LICENSE
#

name: CI

on:
  push:
    paths:
    - '.github/workflows/ci.yml'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            host: mac
            flavor: Release
            variation: mac
          - os: macos-latest
            host: mac
            flavor: Release
            variation: ios
          - os: ubuntu-latest
            host: linux
            flavor: Release
            variation: linux
          - os: ubuntu-latest
            host: linux
            flavor: Release
            variation: android
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - name: System Overview
      timeout-minutes: 1
      run: |
        set -x
        uname -a
        df -h
        ulimit -a
        if [ "${{ matrix.host }}" = "linux" ]; then
            sudo swapon --show
            free -h
        fi
    - name: Checkout Sources
      timeout-minutes: 1
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '2.7' # cocos2d-x scripts refuse to work with python3
    - name: Setup Environment Variables
      timeout-minutes: 1
      run: |
        export COCOS_X_ROOT=${GITHUB_WORKSPACE}/external/cocos2d-x
        export COCOS_CONSOLE_ROOT=${COCOS_X_ROOT}/tools/cocos2d-console/bin
        export COCOS_TEMPLATES_ROOT=${COCOS_X_ROOT}/templates
        export JAVA_HOME=${JAVA_HOME_11_X64}
        # Persist exported variables between steps in GitHub Actions
        echo "COCOS_X_ROOT=$COCOS_X_ROOT" >> $GITHUB_ENV
        echo "COCOS_CONSOLE_ROOT=$COCOS_CONSOLE_ROOT" >> $GITHUB_ENV
        echo "COCOS_TEMPLATES_ROOT=$COCOS_TEMPLATES_ROOT" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "${COCOS_X_ROOT}" >> $GITHUB_PATH
        echo "${COCOS_CONSOLE_ROOT}" >> $GITHUB_PATH
        echo "${COCOS_TEMPLATES_ROOT}" >> $GITHUB_PATH
        set
    - name: Download Shared Dependencies
      timeout-minutes: 4
      run: |
        git clone https://github.com/cocos2d/cocos2d-x.git -b cocos2d-x-4.0 --depth=1 --single-branch
        pushd cocos2d-x
        python download-deps.py --remove-download=yes
        git submodule update --init
        popd
      working-directory: ./external
    - name: Install Dependencies (Linux)
      timeout-minutes: 10
      run: |
        # Note: official way fails, so we just copy their cocos2d-x dependencies without lua dependencies below
        # pushd ${GITHUB_WORKSPACE}/external/cocos2d-x
        # yes | ./install-deps-linux.sh
        # popd
        sudo apt-get update
        sudo apt-get install --yes libxxf86vm-dev libx11-dev libxmu-dev libglu1-mesa-dev libgl2ps-dev libxi-dev libzip-dev libpng-dev libcurl4-gnutls-dev libfontconfig1-dev libsqlite3-dev libglew-dev libssl-dev libgtk-3-dev binutils
      working-directory: ./external
      if: matrix.variation == 'linux'
    - name: Create Hello World
      timeout-minutes: 2
      run: |
        cocos new -p com.crowdstech.cocos2d_ci -e ${GITHUB_WORKSPACE}/external/cocos2d-x --portrait -l cpp --agreement n --ios-bundleid com.crowdstech.cocos2d-ci --mac-bundleid com.crowdstech.cocos2d-ci MyCocos4Proj
        #sed -i -e "s/#\(.*\)GRLXXXX2K9/\1${{ secrets.DEVELOPMENT_TEAM }}/g"     MyCocos4Proj/CMakeLists.txt
    - name: Build (Linux)
      timeout-minutes: 20
      run: |
        mkdir build-${{ matrix.variation }}
        pushd build-${{ matrix.variation }}
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ matrix.flavor }}
        make
        ls -alFR
        popd
      working-directory: ./MyCocos4Proj
      if: matrix.variation == 'linux'
    - name: Build (Android)
      timeout-minutes: 40
      run: |
        sed -i -e "s/gradle-5.1.1-all.zip/gradle-6.7.1-all.zip/g" proj.android/gradle/wrapper/gradle-wrapper.properties
        sed -i -e "s/com.android.tools.build:gradle:3.1.0/com.android.tools.build:gradle:3.4.2/g" proj.android/build.gradle
        pushd proj.android
        ./gradlew assembleRelease -PPROP_BUILD_TYPE=cmake --parallel --info
        ls -alFR
        popd
      working-directory: ./MyCocos4Proj
      if: matrix.variation == 'android'
    - name: Build (macOS)
      timeout-minutes: 20
      run: |
        mkdir build-${{ matrix.variation }}
        pushd build-${{ matrix.variation }}
        cmake .. -GXcode -DCMAKE_XCODE_ATTRIBUTE_MACOSX_DEPLOYMENT_TARGET=10.12
        cmake --build . --config ${{ matrix.flavor }}
        ls -alFR
        popd
      working-directory: ./MyCocos4Proj
      if: matrix.variation == 'mac'
    - name: Build (iOS)
      timeout-minutes: 50
      run: |
        sed -i -e "s/org.cocos2dx.\${PRODUCT_NAME}/com.crowdstech.cocos2d-ci/g" proj.ios_mac/ios/Info.plist
        sed -i -e "s/\"\/usr\/lib\/libz.dylib\"/\${ZLIB}/g"                     cocos2d/cmake/Modules/CocosConfigDepend.cmake
        sed -i -e "s/\"\/usr\/lib\/libiconv.dylib\"/\${ICONVLIB}/g"             cocos2d/cmake/Modules/CocosConfigDepend.cmake
        mkdir build-${{ matrix.variation }}
        pushd build-${{ matrix.variation }}
        cmake .. -GXcode -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_SYSROOT=iphoneos  -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY="iPhone Developer" -DCMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM=${{ secrets.DEVELOPMENT_TEAM }} -DCMAKE_XCODE_ATTRIBUTE_PROVISIONING_PROFILE_SPECIFIER=PuzzwordDevProv -DCMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET=9.0
        cmake --build . --config ${{ matrix.flavor }} -- -allowProvisioningUpdates
        ls -alFR
        popd
      working-directory: ./MyCocos4Proj
      if: matrix.variation == 'ios'
